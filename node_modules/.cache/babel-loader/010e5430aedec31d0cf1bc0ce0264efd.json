{"ast":null,"code":"var _jsxFileName = \"/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/country-global/Map.js\";\nimport React from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nexport default class Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      layerGroup: L.layerGroup([])\n    };\n  }\n\n  componentDidMount() {\n    this.map = L.map('map', {\n      center: [29, -20],\n      zoom: 2.5,\n      scrollWheelZoom: false\n    });\n    L.tileLayer('https://tile.openstreetmap.bzh/br/{z}/{x}/{y}.png', {\n      maxNativeZoom: 20,\n      maxZoom: 20,\n      attribution: '&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n    }).addTo(this.map);\n  }\n\n  componentDidUpdate() {\n    this.state.layerGroup.clearLayers();\n\n    if (this.props.isFiltered) {\n      this.props.countries.filter(country => country.country === this.props.input).map(element => {\n        const layer = L.circle([element.countryInfo.lat, element.countryInfo.long], {\n          color: 'red',\n          radius: 200\n        });\n        const outerLayer = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {\n          color: 'steelblue',\n          radius: 50\n        });\n        this.state.layerGroup.addLayer(layer);\n        this.state.layerGroup.addLayer(outerLayer);\n        return layer;\n      });\n      this.state.layerGroup.addTo(this.map);\n    }\n\n    if (!this.props.isFiltered) {\n      this.props.countries.map(element => {\n        const circleRadius = element[this.props.activeView] / 25000;\n        const layer = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {\n          color: conditionalStyling(this.props.activeView),\n          radius: circleRadius\n        });\n        this.state.layerGroup.addLayer(layer);\n        return layer;\n      });\n      this.state.layerGroup.addTo(this.map);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    });\n  }\n\n}\n\nfunction conditionalStyling(activeView) {\n  if (activeView === 'cases') {\n    return \"orange\";\n  }\n\n  if (activeView === 'deaths') {\n    return \"red\";\n  }\n\n  return \"green\";\n}","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/country-global/Map.js"],"names":["React","L","Map","Component","constructor","props","state","layerGroup","componentDidMount","map","center","zoom","scrollWheelZoom","tileLayer","maxNativeZoom","maxZoom","attribution","addTo","componentDidUpdate","clearLayers","isFiltered","countries","filter","country","input","element","layer","circle","countryInfo","lat","long","color","radius","outerLayer","circleMarker","addLayer","circleRadius","activeView","conditionalStyling","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nexport default class Map extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            layerGroup: L.layerGroup([])\n        }\n    }\n\n    componentDidMount(){\n        this.map = L.map('map', {\n            center: [29, -20],\n            zoom: 2.5,\n            scrollWheelZoom: false\n          });\n\n        L.tileLayer('https://tile.openstreetmap.bzh/br/{z}/{x}/{y}.png', {\n        maxNativeZoom: 20,\n        maxZoom: 20,\n\t    attribution: '&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n        }).addTo(this.map);\n    }\n\n    componentDidUpdate(){\n        \n        this.state.layerGroup.clearLayers();\n\n        if(this.props.isFiltered){\n            this.props.countries\n            .filter((country) => country.country === this.props.input)\n            .map((element)=>{\n                const layer = L.circle([element.countryInfo.lat, element.countryInfo.long], {color: 'red', radius: 200})\n                const outerLayer = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {color: 'steelblue', radius: 50})\n                this.state.layerGroup.addLayer(layer)\n                this.state.layerGroup.addLayer(outerLayer)\n                return layer;\n            });\n            this.state.layerGroup.addTo(this.map) \n        }\n\n        if(!this.props.isFiltered){\n            this.props.countries\n            .map((element) => {\n                const circleRadius = element[this.props.activeView]/25000;\n                const layer = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {color: conditionalStyling(this.props.activeView), radius: circleRadius})\n                this.state.layerGroup.addLayer(layer)\n                return layer;\n            });\n            this.state.layerGroup.addTo(this.map)\n        }\n    }\n    render(){\n        return  <div id=\"map\"></div>\n    }\n}\n\nfunction conditionalStyling(activeView){\n    if (activeView === 'cases'){\n        return \"orange\"\n    }\n    if (activeView === 'deaths'){\n        return \"red\"\n    }\n    return \"green\"\n}"]},"metadata":{},"sourceType":"module"}