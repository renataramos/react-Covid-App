{"ast":null,"code":"var _jsxFileName = \"/Users/utilizador/Documents/academia/LocalRepo/covid-react-app/src/components/CountriesList.js\";\nimport React from 'react';\nimport Country from './Country.js';\nimport { BrowserRouter, Link, Route } from 'react-router-dom';\nconst cases = 'cases';\nconst deaths = 'deaths';\nrecovered;\nexport default function CountriesList(props) {\n  if (props.activeView === 'cases') {\n    return /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"num\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, props.casesNum)), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }, props.countries.sort((a, b) => b.cases - a.cases).slice(0, 10).map(element => /*#__PURE__*/React.createElement(\"li\", {\n      key: element.countryInfo._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      id: \"link\",\n      to: `/${element.country}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 33\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 77\n      }\n    }, element.country), \" : \", element.cases, \" \"), /*#__PURE__*/React.createElement(Route, {\n      path: `/${element.country}`,\n      render: () => {\n        return /*#__PURE__*/React.createElement(Country, {\n          country: element,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 44\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n  if (props.activeView === 'deaths') {\n    return /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"num\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, props.deathsNum)), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, props.countries.sort((a, b) => b.deaths - a.deaths).slice(0, 10).map(element => /*#__PURE__*/React.createElement(\"li\", {\n      key: element.countryInfo._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      id: \"link\",\n      to: `/${element.country}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 77\n      }\n    }, element.country), \" : \", element.deaths, \" \"), /*#__PURE__*/React.createElement(Route, {\n      path: `/${element.country}`,\n      render: () => {\n        return /*#__PURE__*/React.createElement(Country, {\n          country: element,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 44\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n  if (props.activeView === 'recovered') {\n    return /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"num\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, props.recoveredNum)), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, props.countries.sort((a, b) => b.recovered - a.recovered).slice(0, 10).map(element => /*#__PURE__*/React.createElement(\"li\", {\n      key: element.countryInfo._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      id: \"link\",\n      to: `/${element.country}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 77\n      }\n    }, element.country), \" : \", element.recovered, \" \"), /*#__PURE__*/React.createElement(Route, {\n      path: `/${element.country}`,\n      render: () => {\n        return /*#__PURE__*/React.createElement(Country, {\n          country: element,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 44\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    }))))));\n  }\n}","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/covid-react-app/src/components/CountriesList.js"],"names":["React","Country","BrowserRouter","Link","Route","cases","deaths","recovered","CountriesList","props","activeView","casesNum","countries","sort","a","b","slice","map","element","countryInfo","_id","country","deathsNum","recoveredNum"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Country from './Country.js'\nimport {\n    BrowserRouter,\n    Link,\n    Route\n} from 'react-router-dom'\n\nconst cases = 'cases';\nconst deaths = 'deaths';\nrecovered \n\nexport default function CountriesList(props){\n\n    if (props.activeView === 'cases'){\n        return (\n            <BrowserRouter>\n                <div id=\"container\">\n                \n                <div id=\"num\">\n                    <h3>{props.casesNum}</h3>\n                </div>\n                    <ul>\n                    {props.countries.sort((a,b)=> b.cases - a.cases)\n                        .slice(0,10)\n                        .map((element)=>(\n                            <li key = {element.countryInfo._id}>\n                                <Link id=\"link\" to={`/${element.country}`}> <strong>{element.country}</strong> : {element.cases} </Link>\n                                <Route path={`/${element.country}`} render={()=>{\n                                    return <Country country={element}/>\n                                    }}/> \n                            </li>\n                        ))}\n                    </ul>   \n                </div>\n            </BrowserRouter>\n        )\n    }\n\n    if (props.activeView === 'deaths'){\n        return (\n            <BrowserRouter>\n                <div id=\"container\">\n                <div id=\"num\">\n                    <h3>{props.deathsNum}</h3>\n                </div>\n                    <ul>\n                    {props.countries.sort((a,b)=> b.deaths - a.deaths)\n                        .slice(0,10)\n                        .map((element)=>(\n                            <li key = {element.countryInfo._id}>\n                                <Link id=\"link\" to={`/${element.country}`}> <strong>{element.country}</strong> : {element.deaths} </Link>\n                                <Route path={`/${element.country}`} render={()=>{\n                                    return <Country country={element}/>\n                                    }}/> \n                            </li>\n                            ))}\n                    </ul>   \n                </div>\n            </BrowserRouter>\n        )\n    }\n\n    if (props.activeView === 'recovered'){\n        return (\n            <BrowserRouter>\n                <div id=\"container\">\n                <div id=\"num\">\n                    <h3>{props.recoveredNum}</h3>\n                </div>\n                    <ul>\n                    {props.countries.sort((a,b)=> b.recovered - a.recovered)\n                        .slice(0,10)\n                        .map((element)=>(\n                            <li key = {element.countryInfo._id}>\n                                <Link id=\"link\" to={`/${element.country}`}> <strong>{element.country}</strong> : {element.recovered} </Link>\n                                <Route path={`/${element.country}`} render={()=>{\n                                    return <Country country={element}/>\n                                    }}/> \n                            </li>\n                            \n                            ))}\n                    </ul>   \n                </div>\n             </BrowserRouter>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}