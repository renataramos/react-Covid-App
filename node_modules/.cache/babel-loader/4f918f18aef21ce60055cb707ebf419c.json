{"ast":null,"code":"var _jsxFileName = \"/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/GlobalChart.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { browserHistory } from 'react-router';\n\nfunction catchError() {\n  //browserHistory.push('/page-not-found')\n  //window.location.reload()\n  console.log(1);\n}\n\nexport default function GlobalChart() {\n  const [casesData, setCasesData] = useState({});\n  const [deathsData, setDeathsData] = useState({});\n  const [recoveredData, setRecoveredData] = useState({});\n  useEffect(() => {\n    async function fetchData() {\n      const requestOption = {\n        method: \"GET\",\n        redirect: \"follow\"\n      };\n\n      try {\n        const response = await fetch(`https://disease.sh/v2/historical/all`, requestOption);\n        return response.ok ? response.json() : null;\n      } catch (err) {\n        console.log(err);\n        return null;\n      }\n    }\n\n    async function prepareData() {\n      let apiValues = await fetchData();\n      let headerCases = apiValues[\"cases\"];\n      const casesData = [];\n\n      for (let key in headerCases) {\n        if (headerCases.hasOwnProperty(key)) {\n          casesData.concat([{\n            name: key\n          }]);\n          console.log(key + \"->\" + headerCases[key]);\n        }\n      }\n\n      console.log(apiValues);\n    }\n\n    prepareData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"WHAT\"));\n}","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/GlobalChart.js"],"names":["React","useState","useEffect","browserHistory","catchError","console","log","GlobalChart","casesData","setCasesData","deathsData","setDeathsData","recoveredData","setRecoveredData","fetchData","requestOption","method","redirect","response","fetch","ok","json","err","prepareData","apiValues","headerCases","key","hasOwnProperty","concat","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,cAAR,QAA6B,cAA7B;;AAGA,SAASC,UAAT,GAAqB;AACjB;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACH;;AAED,eAAe,SAASC,WAAT,GAAsB;AAEjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAI;AAEV,mBAAeY,SAAf,GAA0B;AACtB,YAAMC,aAAa,GAAG;AAClBC,QAAAA,MAAM,EAAE,KADU;AAElBC,QAAAA,QAAQ,EAAE;AAFQ,OAAtB;;AAKA,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAF,EAAyCJ,aAAzC,CAA5B;AAEA,eAAOG,QAAQ,CAACE,EAAT,GAAcF,QAAQ,CAACG,IAAT,EAAd,GAAgC,IAAvC;AACH,OAJD,CAIE,OAAOC,GAAP,EAAW;AACTjB,QAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ;AACA,eAAO,IAAP;AACH;AACJ;;AAED,mBAAeC,WAAf,GAA4B;AACxB,UAAIC,SAAS,GAAG,MAAMV,SAAS,EAA/B;AACA,UAAIW,WAAW,GAAGD,SAAS,CAAC,OAAD,CAA3B;AAIA,YAAMhB,SAAS,GAAG,EAAlB;;AAEA,WAAK,IAAIkB,GAAT,IAAgBD,WAAhB,EAA4B;AAExB,YAAGA,WAAW,CAACE,cAAZ,CAA2BD,GAA3B,CAAH,EAAmC;AAC/BlB,UAAAA,SAAS,CAACoB,MAAV,CAAiB,CAAC;AAACC,YAAAA,IAAI,EAAEH;AAAP,WAAD,CAAjB;AACArB,UAAAA,OAAO,CAACC,GAAR,CAAYoB,GAAG,GAAG,IAAN,GAAaD,WAAW,CAACC,GAAD,CAApC;AAEH;AACJ;;AAIDrB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,SAAZ;AACH;;AAEDD,IAAAA,WAAW;AAEd,GA1CQ,EA0CN,EA1CM,CAAT;AA+CA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,CADJ;AAQH","sourcesContent":["import React from 'react';\nimport {useState, useEffect} from 'react';\nimport {browserHistory} from 'react-router';\n\n\nfunction catchError(){\n    //browserHistory.push('/page-not-found')\n    //window.location.reload()\n    console.log(1)\n}\n\nexport default function GlobalChart(){\n    \n    const [casesData, setCasesData] = useState({});\n    const [deathsData, setDeathsData] = useState({});\n    const [recoveredData, setRecoveredData] = useState({});\n\n    useEffect(()=>{\n\n        async function fetchData(){\n            const requestOption = {\n                method: \"GET\",\n                redirect: \"follow\"\n            }\n    \n            try {\n                const response = await fetch(`https://disease.sh/v2/historical/all`, requestOption)\n    \n                return response.ok ? response.json() : null\n            } catch (err){\n                console.log(err);\n                return null;\n            }\n        }\n    \n        async function prepareData(){\n            let apiValues = await fetchData();\n            let headerCases = apiValues[\"cases\"];\n            \n\n            \n            const casesData = []\n\n            for (let key in headerCases){\n                \n                if(headerCases.hasOwnProperty(key)){\n                    casesData.concat([{name: key}])\n                    console.log(key + \"->\" + headerCases[key])\n\n                }\n            }\n            \n            \n            \n            console.log(apiValues)\n        }\n    \n        prepareData();\n\n    }, [])\n    \n\n    \n\n    return (\n        <div>\n        <h3>\n        WHAT\n        </h3>\n        </div>\n        )\n        \n}\n\n"]},"metadata":{},"sourceType":"module"}