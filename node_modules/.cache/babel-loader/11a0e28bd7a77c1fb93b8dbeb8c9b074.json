{"ast":null,"code":"var _jsxFileName = \"/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/GlobalChart.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis } from 'recharts';\nexport default function GlobalChart() {\n  const [casesData, setCasesData] = useState({});\n  const [deathsData, setDeathsData] = useState({});\n  const [recoveredData, setRecoveredData] = useState({});\n  useEffect(() => {\n    async function fetchData() {\n      const requestOption = {\n        method: \"GET\",\n        redirect: \"follow\"\n      };\n\n      try {\n        const response = await fetch(`https://disease.sh/v2/historical/all`, requestOption);\n        return response.ok ? response.json() : null;\n      } catch (err) {\n        console.log(err);\n        return null;\n      }\n    }\n\n    async function prepareData() {\n      let apiValues = await fetchData();\n      let rawCasesData = apiValues[\"cases\"];\n      const casesData = [];\n\n      for (let key in rawCasesData) {\n        if (rawCasesData.hasOwnProperty(key)) {\n          const newRow = {\n            name: key,\n            value: rawCasesData[key]\n          };\n          casesData.push(newRow);\n        }\n      }\n\n      setCasesData(casesData);\n    }\n\n    prepareData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/GlobalChart.js"],"names":["React","useState","useEffect","LineChart","Line","XAxis","GlobalChart","casesData","setCasesData","deathsData","setDeathsData","recoveredData","setRecoveredData","fetchData","requestOption","method","redirect","response","fetch","ok","json","err","console","log","prepareData","apiValues","rawCasesData","key","hasOwnProperty","newRow","name","value","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SACIC,SADJ,EACeC,IADf,EACqBC,KADrB,QAEO,UAFP;AAOA,eAAe,SAASC,WAAT,GAAsB;AAEjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAI;AAEV,mBAAeW,SAAf,GAA0B;AACtB,YAAMC,aAAa,GAAG;AAClBC,QAAAA,MAAM,EAAE,KADU;AAElBC,QAAAA,QAAQ,EAAE;AAFQ,OAAtB;;AAKA,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAF,EAAyCJ,aAAzC,CAA5B;AAEA,eAAOG,QAAQ,CAACE,EAAT,GAAcF,QAAQ,CAACG,IAAT,EAAd,GAAgC,IAAvC;AACH,OAJD,CAIE,OAAOC,GAAP,EAAW;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,eAAO,IAAP;AACH;AACJ;;AAED,mBAAeG,WAAf,GAA4B;AACxB,UAAIC,SAAS,GAAG,MAAMZ,SAAS,EAA/B;AACA,UAAIa,YAAY,GAAGD,SAAS,CAAC,OAAD,CAA5B;AAEA,YAAMlB,SAAS,GAAG,EAAlB;;AAEA,WAAK,IAAIoB,GAAT,IAAgBD,YAAhB,EAA6B;AAEzB,YAAGA,YAAY,CAACE,cAAb,CAA4BD,GAA5B,CAAH,EAAoC;AAChC,gBAAME,MAAM,GAAG;AACXC,YAAAA,IAAI,EAAEH,GADK;AAEXI,YAAAA,KAAK,EAAEL,YAAY,CAACC,GAAD;AAFR,WAAf;AAIApB,UAAAA,SAAS,CAACyB,IAAV,CAAeH,MAAf;AACC;AACJ;;AACLrB,MAAAA,YAAY,CAACD,SAAD,CAAZ;AAEC;;AAEDiB,IAAAA,WAAW;AAElB,GAxCQ,EAwCN,EAxCM,CAAT;AA6CA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADJ;AAQH","sourcesContent":["import React from 'react';\nimport {useState, useEffect} from 'react';\nimport {\n    LineChart, Line, XAxis, \n} from 'recharts'\n\n\n\n\nexport default function GlobalChart(){\n    \n    const [casesData, setCasesData] = useState({});\n    const [deathsData, setDeathsData] = useState({});\n    const [recoveredData, setRecoveredData] = useState({});\n\n    useEffect(()=>{\n\n        async function fetchData(){\n            const requestOption = {\n                method: \"GET\",\n                redirect: \"follow\"\n            }\n    \n            try {\n                const response = await fetch(`https://disease.sh/v2/historical/all`, requestOption)\n    \n                return response.ok ? response.json() : null\n            } catch (err){\n                console.log(err);\n                return null;\n            }\n        }\n    \n        async function prepareData(){\n            let apiValues = await fetchData();\n            let rawCasesData = apiValues[\"cases\"];\n            \n            const casesData = []\n\n            for (let key in rawCasesData){\n                \n                if(rawCasesData.hasOwnProperty(key)){\n                    const newRow = {\n                        name: key,\n                        value: rawCasesData[key]\n                    }\n                    casesData.push(newRow)\n                    }\n                }\n            setCasesData(casesData)\n\n            }\n\n            prepareData();\n\n    }, [])\n    \n\n    \n\n    return (\n        <div>\n        <h3>\n        \n        </h3>\n        </div>\n        )\n        \n}\n\n"]},"metadata":{},"sourceType":"module"}