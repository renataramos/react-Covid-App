{"ast":null,"code":"var _jsxFileName = \"/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/Map.js\";\nimport React from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport styled from 'styled-components';\nconst Wrapper = styled.div`\n    width: ${props => props.width};\n    height: ${props => props.height};`;\nexport default class Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      layerGroup: L.layerGroup([])\n    };\n  }\n\n  componentDidMount() {\n    this.map = L.map('map', {\n      center: [40, 0],\n      zoom: 2,\n      scrollWheelZoom: false\n    });\n    L.tileLayer('https://tile.openstreetmap.bzh/br/{z}/{x}/{y}.png', {\n      maxNativeZoom: 20,\n      maxZoom: 20,\n      attribution: '&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n    }).addTo(this.map);\n  }\n\n  componentDidUpdate() {\n    this.state.layerGroup.clearLayers();\n\n    if (this.props.isFiltered) {\n      this.props.countries.filter(country => country.country === this.props.input).map(element => {\n        const layer = L.circle([element.countryInfo.lat, element.countryInfo.long], {\n          color: 'red',\n          radius: 200\n        });\n        const outerLayer = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {\n          color: 'steelblue',\n          radius: 50\n        });\n        this.state.layerGroup.addLayer(layer);\n        this.state.layerGroup.addLayer(outerLayer);\n        return layer;\n      });\n      this.state.layerGroup.addTo(this.map);\n    }\n\n    if (!this.props.isFiltered) {\n      if (this.props.activeView === 'cases') {\n        this.props.countries.sort((a, b) => b.cases - a.cases).map(element => {\n          const circleRadius = element.cases / 25000;\n          const layer = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {\n            color: 'orange',\n            radius: circleRadius\n          });\n          this.state.layerGroup.addLayer(layer);\n          return layer;\n        });\n        this.state.layerGroup.addTo(this.map);\n      }\n\n      if (this.props.activeView === 'recovered') {\n        this.props.countries.sort((a, b) => b.recovered - a.recovered).map(element => {\n          const circleRadius = element.recovered / 25000;\n          const layer = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {\n            color: 'green',\n            radius: circleRadius\n          });\n          this.state.layerGroup.addLayer(layer);\n          return layer;\n        });\n        this.state.layerGroup.addTo(this.map);\n      }\n\n      if (this.props.activeView === 'deaths') {\n        this.props.countries.sort((a, b) => b.deaths - a.deaths).map(element => {\n          const circleRadius = element.deaths / 10000;\n          const layer = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {\n            color: 'red',\n            radius: circleRadius\n          });\n          this.state.layerGroup.addLayer(layer);\n          return layer;\n        });\n        this.state.layerGroup.addTo(this.map);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      width: \"1100px\",\n      height: \"0px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 16\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/Map.js"],"names":["React","L","styled","Wrapper","div","props","width","height","Map","Component","constructor","state","layerGroup","componentDidMount","map","center","zoom","scrollWheelZoom","tileLayer","maxNativeZoom","maxZoom","attribution","addTo","componentDidUpdate","clearLayers","isFiltered","countries","filter","country","input","element","layer","circle","countryInfo","lat","long","color","radius","outerLayer","circleMarker","addLayer","activeView","sort","a","b","cases","circleRadius","recovered","deaths","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    width: ${props => props.width};\n    height: ${props => props.height};`\n\nexport default class Map extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            \n            layerGroup: L.layerGroup([])\n        }\n    }\n\n    componentDidMount(){\n        this.map = L.map('map', {\n            center: [40, 0],\n            zoom: 2,\n            scrollWheelZoom: false\n          });\n\n        L.tileLayer('https://tile.openstreetmap.bzh/br/{z}/{x}/{y}.png', {\n        maxNativeZoom: 20,\n        maxZoom: 20,\n\t    attribution: '&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n        }).addTo(this.map);\n    }\n    \n\n    componentDidUpdate(){\n        \n        \n        this.state.layerGroup.clearLayers();\n\n        if(this.props.isFiltered){\n            this.props.countries\n            .filter((country) => country.country === this.props.input)\n            .map((element)=>{\n                const layer = L.circle([element.countryInfo.lat, element.countryInfo.long], {color: 'red', radius: 200})\n                const outerLayer = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {color: 'steelblue', radius: 50})\n                this.state.layerGroup.addLayer(layer)\n                this.state.layerGroup.addLayer(outerLayer)\n                return layer;\n            });\n            this.state.layerGroup.addTo(this.map) \n        }\n\n        if(!this.props.isFiltered){\n\n            if(this.props.activeView ==='cases'){\n                this.props.countries.sort((a,b) => b.cases - a.cases)\n                .map((element) => {\n                    const circleRadius = element.cases/25000;\n                    const layer = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {color: 'orange', radius: circleRadius})\n                    this.state.layerGroup.addLayer(layer)\n                    return layer;\n                });\n                this.state.layerGroup.addTo(this.map)\n            }\n    \n            if(this.props.activeView ==='recovered'){\n                this.props.countries.sort((a,b) => b.recovered - a.recovered)\n                .map((element) => {\n                    const circleRadius = element.recovered/25000;\n                    const layer = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {color: 'green', radius: circleRadius})\n                    this.state.layerGroup.addLayer(layer)\n                    return layer;\n                });\n                this.state.layerGroup.addTo(this.map)\n            }\n    \n            if(this.props.activeView ==='deaths'){\n                this.props.countries.sort((a,b) => b.deaths - a.deaths)\n                \n                .map((element) => {\n                    const circleRadius = element.deaths/10000;\n                    const layer = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {color: 'red', radius: circleRadius})\n                    this.state.layerGroup.addLayer(layer)\n                    return layer;\n                });\n                this.state.layerGroup.addTo(this.map)\n            }\n        }\n\n    }\n\n    render(){\n        return <Wrapper width=\"1100px\" height=\"0px\"/>\n    }\n}"]},"metadata":{},"sourceType":"module"}