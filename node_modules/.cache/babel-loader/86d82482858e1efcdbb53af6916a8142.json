{"ast":null,"code":"import { browserHistory } from 'react-router';\nexport async function fetchGlobalChartData() {\n  const requestOption = {\n    method: \"GET\",\n    redirect: \"follow\",\n    mode: 'cors'\n  };\n\n  try {\n    const response = await fetch(`https://disease.sh/v2/historical/all`, requestOption);\n    return response.ok ? response.json() : null;\n  } catch (err) {\n    browserHistory.push('/page-not-found');\n    window.location.reload();\n  }\n}\nexport async function fetchCountryChartData(countryID) {\n  const requestOption = {\n    method: \"GET\",\n    redirect: \"follow\"\n  };\n  const response = await fetch(`https://disease.sh/v2/historical/${countryID}`, requestOption);\n\n  if (!response.ok) {\n    return {\n      timeline: {\n        cases: 200,\n        recovered: 0,\n        deaths: 0\n      }\n    };\n  }\n\n  return response.json();\n}\nexport async function fetchCountryData(countryID) {\n  const data = await fetch(`https://disease.sh/v2/countries/${countryID}`);\n\n  if (!data.ok) {\n    throw new Error(\"Not found\");\n  }\n\n  return data.json();\n}\nexport async function fetchCountriesData() {\n  const requestOption = {\n    method: \"GET\",\n    redirect: \"follow\"\n  };\n  const api = `https://disease.sh/v2/countries`;\n  const response = await fetch(api, requestOption);\n  const content = await response.json();\n  return content;\n}\nexport async function fetchGlobalData() {\n  const requestOption = {\n    method: \"GET\",\n    redirect: \"follow\",\n    mode: 'cors'\n  };\n  const api = `https://disease.sh/v2/all`;\n  const response = await fetch(api, requestOption);\n  const content = await response.json();\n  return content;\n}","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/ApiService.js"],"names":["browserHistory","fetchGlobalChartData","requestOption","method","redirect","mode","response","fetch","ok","json","err","push","window","location","reload","fetchCountryChartData","countryID","timeline","cases","recovered","deaths","fetchCountryData","data","Error","fetchCountriesData","api","content","fetchGlobalData"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,cAA7B;AAEA,OAAO,eAAeC,oBAAf,GAAsC;AAEzC,QAAMC,aAAa,GAAG;AAClBC,IAAAA,MAAM,EAAE,KADU;AAElBC,IAAAA,QAAQ,EAAE,QAFQ;AAGlBC,IAAAA,IAAI,EAAE;AAHY,GAAtB;;AAMA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAF,EAAyCL,aAAzC,CAA5B;AAEA,WAAOI,QAAQ,CAACE,EAAT,GAAcF,QAAQ,CAACG,IAAT,EAAd,GAAgC,IAAvC;AACH,GAJD,CAIE,OAAOC,GAAP,EAAW;AACTV,IAAAA,cAAc,CAACW,IAAf,CAAoB,iBAApB;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;AACJ;AAED,OAAO,eAAeC,qBAAf,CAAqCC,SAArC,EAAgD;AACnD,QAAMd,aAAa,GAAG;AAClBC,IAAAA,MAAM,EAAE,KADU;AAElBC,IAAAA,QAAQ,EAAE;AAFQ,GAAtB;AAKA,QAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,oCAAmCS,SAAU,EAA/C,EAAkDd,aAAlD,CAA5B;;AAEA,MAAI,CAACI,QAAQ,CAACE,EAAd,EAAiB;AACb,WAAQ;AACJS,MAAAA,QAAQ,EAAE;AACVC,QAAAA,KAAK,EAAE,GADG;AAEVC,QAAAA,SAAS,EAAE,CAFD;AAGVC,QAAAA,MAAM,EAAE;AAHE;AADN,KAAR;AAMH;;AACD,SAAOd,QAAQ,CAACG,IAAT,EAAP;AACH;AAGD,OAAO,eAAeY,gBAAf,CAAgCL,SAAhC,EAA0C;AAC7C,QAAMM,IAAI,GAAG,MAAMf,KAAK,CAAE,mCAAkCS,SAAU,EAA9C,CAAxB;;AAEA,MAAI,CAACM,IAAI,CAACd,EAAV,EAAa;AACT,UAAM,IAAIe,KAAJ,CAAU,WAAV,CAAN;AACH;;AAED,SAAOD,IAAI,CAACb,IAAL,EAAP;AACH;AAED,OAAO,eAAee,kBAAf,GAAmC;AACtC,QAAMtB,aAAa,GAAG;AAClBC,IAAAA,MAAM,EAAE,KADU;AAElBC,IAAAA,QAAQ,EAAE;AAFQ,GAAtB;AAIA,QAAMqB,GAAG,GAAI,iCAAb;AACA,QAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAACkB,GAAD,EAAMvB,aAAN,CAA5B;AACA,QAAMwB,OAAO,GAAG,MAAMpB,QAAQ,CAACG,IAAT,EAAtB;AAEA,SAAOiB,OAAP;AACH;AAED,OAAO,eAAeC,eAAf,GAAgC;AACnC,QAAMzB,aAAa,GAAG;AAClBC,IAAAA,MAAM,EAAE,KADU;AAElBC,IAAAA,QAAQ,EAAE,QAFQ;AAGlBC,IAAAA,IAAI,EAAE;AAHY,GAAtB;AAKA,QAAMoB,GAAG,GAAI,2BAAb;AACA,QAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAACkB,GAAD,EAAMvB,aAAN,CAA5B;AACA,QAAMwB,OAAO,GAAG,MAAMpB,QAAQ,CAACG,IAAT,EAAtB;AAEA,SAAOiB,OAAP;AACH","sourcesContent":["import {browserHistory} from 'react-router'\n\nexport async function fetchGlobalChartData() {\n    \n    const requestOption = {\n        method: \"GET\",\n        redirect: \"follow\",\n        mode: 'cors'\n    }\n\n    try {\n        const response = await fetch(`https://disease.sh/v2/historical/all`, requestOption)\n\n        return response.ok ? response.json() : null\n    } catch (err){\n        browserHistory.push('/page-not-found')\n        window.location.reload()\n    }\n}\n\nexport async function fetchCountryChartData(countryID) {\n    const requestOption = {\n        method: \"GET\",\n        redirect: \"follow\"\n    }\n\n    const response = await fetch(`https://disease.sh/v2/historical/${countryID}`, requestOption)\n\n    if (!response.ok){\n        return ({\n            timeline: { \n            cases: 200,\n            recovered: 0,\n            deaths: 0 }\n        })\n    }\n    return response.json() \n} \n\n\nexport async function fetchCountryData(countryID){\n    const data = await fetch(`https://disease.sh/v2/countries/${countryID}`)\n\n    if (!data.ok){\n        throw new Error(\"Not found\")\n    }\n        \n    return data.json()\n}\n\nexport async function fetchCountriesData(){\n    const requestOption = {\n        method: \"GET\",\n        redirect: \"follow\"\n    }\n    const api = `https://disease.sh/v2/countries`;\n    const response = await fetch(api, requestOption);\n    const content = await response.json();\n\n    return content;\n}\n\nexport async function fetchGlobalData(){\n    const requestOption = {\n        method: \"GET\",\n        redirect: \"follow\",\n        mode: 'cors'\n    }\n    const api = `https://disease.sh/v2/all`;\n    const response = await fetch(api, requestOption);\n    const content = await response.json();\n  \n    return content;\n}"]},"metadata":{},"sourceType":"module"}