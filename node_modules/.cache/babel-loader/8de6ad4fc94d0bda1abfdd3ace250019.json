{"ast":null,"code":"var _jsxFileName = \"/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/country-global/CountriesList.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nexport default function CountriesList(props) {\n  if (!props.isFiltered) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"countries\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"num\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        color: conditionalStyling(props.activeView)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 79\n      }\n    }, \"total of \", props.activeView, \":\")), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: conditionalStyling(props.activeView)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 79\n      }\n    }, props[props.activeView]))), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, props.countries.sort((a, b) => b[props.activeView] - a[props.activeView]).slice(0, 40).map(element => /*#__PURE__*/React.createElement(\"li\", {\n      key: element.countryInfo._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      id: \"link\",\n      to: `/${element.country}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 33\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 77\n      }\n    }, element.country), \" : \", element[props.activeView], \" \")))));\n  }\n\n  if (props.isFiltered) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"num\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        color: conditionalStyling(props.activeView)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 79\n      }\n    }, \"total of \", props.activeView)), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: conditionalStyling(props.activeView)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 79\n      }\n    }, props[props.activeView]))), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, props.countries.filter(country => country.country === props.input).map(element => /*#__PURE__*/React.createElement(\"li\", {\n      key: element.countryInfo._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      id: \"link\",\n      to: `/${element.country}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 37\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 81\n      }\n    }, element.country), \" : \", element[props.activeView], \" \")))));\n  }\n}\n\nfunction conditionalStyling(activeView) {\n  if (activeView === 'cases') {\n    return \"orange\";\n  }\n\n  if (activeView === 'deaths') {\n    return \"red\";\n  }\n\n  return \"green\";\n}","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/country-global/CountriesList.js"],"names":["React","Link","CountriesList","props","isFiltered","color","conditionalStyling","activeView","countries","sort","a","b","slice","map","element","countryInfo","_id","country","filter","input"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Link,\n} from 'react-router-dom'\n\n\nexport default function CountriesList(props){\n\n    if (!props.isFiltered){\n        \n        return (\n            <div id='countries'>\n                <div id=\"num\">\n                    <h5 style={{color: conditionalStyling(props.activeView)}}><strong>total of {props.activeView}:</strong></h5> \n                    <h3 style={{color: conditionalStyling(props.activeView)}}><strong>{props[props.activeView]}</strong></h3>\n                </div>\n                <ol>\n                {props.countries.sort((a,b)=> b[props.activeView] - a[props.activeView])\n                        .slice(0,40)\n                        .map((element)=>(\n                            <li key = {element.countryInfo._id}>\n                                <Link id=\"link\" to={`/${element.country}`}> <strong>{element.country}</strong> : {element[props.activeView]} </Link>\n                            </li>\n                        ))}\n                    </ol>   \n            </div>\n        )\n    }\n\n    if (props.isFiltered){\n       \n        return (\n            <div>\n                <div id=\"num\">\n                    <h5 style={{color: conditionalStyling(props.activeView)}}><strong>total of {props.activeView}</strong></h5> \n                    <h3 style={{color: conditionalStyling(props.activeView)}}><strong>{props[props.activeView]}</strong></h3>\n                </div>\n                    <ul>\n                        {props.countries.filter((country)=>country.country === props.input)\n                            .map((element)=>(\n                                <li key = {element.countryInfo._id}>\n                                    <Link id=\"link\" to={`/${element.country}`}> <strong>{element.country}</strong> : {element[props.activeView]} </Link>\n                                </li>\n                            ))}\n                    </ul>   \n            </div>)\n        }\n}\n\n\nfunction conditionalStyling(activeView){\n    if (activeView === 'cases'){\n        return \"orange\"\n    }\n    if (activeView === 'deaths'){\n        return \"red\"\n    }\n    return \"green\"\n}\n                                      "]},"metadata":{},"sourceType":"module"}