{"ast":null,"code":"var _jsxFileName = \"/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/CountriesList.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Num(props) {}\n\nexport default function CountriesList(props) {\n  if (!props.isFiltered) {\n    if (props.activeView === 'cases') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"num\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        style: {\n          color: 'orange'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 55\n        }\n      }, props.casesNum))), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }\n      }, props.countries.sort((a, b) => b.cases - a.cases).slice(0, 20).map(element => /*#__PURE__*/React.createElement(\"li\", {\n        key: element.countryInfo._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        id: \"link\",\n        to: `/${element.country}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 37\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 81\n        }\n      }, element.country), \" : \", element.cases, \" \")))));\n    }\n\n    if (props.activeView === 'deaths') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"num\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 52\n        }\n      }, props.deathsNum))), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }\n      }, props.countries.sort((a, b) => b.deaths - a.deaths).slice(0, 20).map(element => /*#__PURE__*/React.createElement(\"li\", {\n        key: element.countryInfo._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        id: \"link\",\n        to: `/${element.country}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 37\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 81\n        }\n      }, element.country), \" : \", element.deaths, \" \")))));\n    }\n\n    if (props.activeView === 'recovered') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"num\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        style: {\n          color: 'green'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 54\n        }\n      }, props.recoveredNum))), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, props.countries.sort((a, b) => b.recovered - a.recovered).slice(0, 20).map(element => /*#__PURE__*/React.createElement(\"li\", {\n        key: element.countryInfo._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        id: \"link\",\n        to: `/${element.country}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 37\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 81\n        }\n      }, element.country), \" : \", element.recovered, \" \")))));\n    }\n  }\n\n  if (props.isFiltered) {\n    if (props.activeView === 'cases') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"num\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        style: {\n          color: 'orange'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 55\n        }\n      }, props.casesNum))), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }, props.countries.filter(country => country.country === props.input).map(element => /*#__PURE__*/React.createElement(\"li\", {\n        key: element.countryInfo._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        id: \"link\",\n        to: `/${element.country}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 41\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 85\n        }\n      }, element.country), \" : \", element.cases, \" \")))));\n    }\n\n    if (props.activeView === 'recovered') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"num\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        style: {\n          color: 'green'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 54\n        }\n      }, props.recoveredNum))), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }, props.countries.filter(country => country.country === props.input).map(element => /*#__PURE__*/React.createElement(\"li\", {\n        key: element.countryInfo._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        id: \"link\",\n        to: `/${element.country}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 41\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 85\n        }\n      }, element.country), \" : \", element.recovered, \" \")))));\n    }\n\n    if (props.activeView === 'deaths') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"num\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 52\n        }\n      }, props.deathsNum))), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }\n      }, props.countries.filter(country => country.country === props.input).map(element => /*#__PURE__*/React.createElement(\"li\", {\n        key: element.countryInfo._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        id: \"link\",\n        to: `/${element.country}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 41\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 85\n        }\n      }, element.country), \" : \", element.deaths, \" \")))));\n    }\n  }\n}","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/CountriesList.js"],"names":["React","Link","Num","props","CountriesList","isFiltered","activeView","color","casesNum","countries","sort","a","b","cases","slice","map","element","countryInfo","_id","country","deathsNum","deaths","recoveredNum","recovered","filter","input"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Link,\n} from 'react-router-dom'\n\nfunction Num(props){\n    \n\n}\n\nexport default function CountriesList(props){\n\n    if (!props.isFiltered){\n        if (props.activeView === 'cases'){\n            return (\n                    <div>\n                    \n                    <div id=\"num\">\n                        <h3 style={{color: 'orange'}}><strong>{props.casesNum}</strong></h3>\n                    </div>\n                        <ul>\n                        {props.countries.sort((a,b)=> b.cases - a.cases)\n                            .slice(0,20)\n                            .map((element)=>(\n                                <li key = {element.countryInfo._id}>\n                                    <Link id=\"link\" to={`/${element.country}`}> <strong>{element.country}</strong> : {element.cases} </Link>\n                                </li>\n                            ))}\n                        </ul>   \n                    </div>\n            )\n        }\n    \n        if (props.activeView === 'deaths'){\n            return (\n                    <div>\n                    <div id=\"num\">\n                        <h3 style={{color: 'red'}}><strong>{props.deathsNum}</strong></h3>\n                    </div>\n                        <ul>\n                        {props.countries.sort((a,b)=> b.deaths - a.deaths)\n                            .slice(0,20)\n                            .map((element)=>(\n                                <li key = {element.countryInfo._id}>\n                                    <Link id=\"link\" to={`/${element.country}`}> <strong>{element.country}</strong> : {element.deaths} </Link>\n                                </li>\n                                ))}\n                        </ul>   \n                    </div>\n            )\n        }\n    \n        if (props.activeView === 'recovered'){\n            return (\n                    <div>\n                    <div id=\"num\">\n                        <h3 style={{color: 'green'}}><strong>{props.recoveredNum}</strong></h3>\n                    </div>\n                        <ul>\n                        {props.countries.sort((a,b)=> b.recovered - a.recovered)\n                            .slice(0,20)\n                            .map((element)=>(\n                                <li key = {element.countryInfo._id}>\n                                    <Link id=\"link\" to={`/${element.country}`}> <strong>{element.country}</strong> : {element.recovered} </Link>\n                                </li>\n                                \n                                ))}\n                        </ul>   \n                    </div>\n            )\n        }\n\n    }\n\n    if (props.isFiltered){\n        if(props.activeView === 'cases'){\n            return (\n                <div>\n                    <div id=\"num\">\n                        <h3 style={{color: 'orange'}}><strong>{props.casesNum}</strong></h3>\n                    </div>\n                        <ul>\n                            {props.countries.filter((country)=>country.country === props.input)\n                                .map((element)=>(\n                                    <li key = {element.countryInfo._id}>\n                                        <Link id=\"link\" to={`/${element.country}`}> <strong>{element.country}</strong> : {element.cases} </Link>\n                                    </li>\n                                ))}\n                        </ul>   \n                </div>)\n\n        }\n\n        if(props.activeView === 'recovered'){\n            return (\n                <div>\n                    <div id=\"num\">\n                        <h3 style={{color: 'green'}}><strong>{props.recoveredNum}</strong></h3>\n                    </div>\n                        <ul>\n                            {props.countries.filter((country)=>country.country === props.input)\n                                .map((element)=>(\n                                    <li key = {element.countryInfo._id}>\n                                        <Link id=\"link\" to={`/${element.country}`}> <strong>{element.country}</strong> : {element.recovered} </Link>\n                                    </li>\n                                ))}\n                        </ul>   \n                </div>) \n\n        }\n\n        if(props.activeView === 'deaths'){\n\n            return (\n                <div>\n                    <div id=\"num\">\n                        <h3 style={{color: 'red'}}><strong>{props.deathsNum}</strong></h3>\n                    </div>\n                        <ul>\n                            {props.countries.filter((country)=>country.country === props.input)\n                                .map((element)=>(\n                                    <li key = {element.countryInfo._id}>\n                                        <Link id=\"link\" to={`/${element.country}`}> <strong>{element.country}</strong> : {element.deaths} </Link>\n                                    </li>\n                                ))}\n                        </ul> \n                </div>)\n        }\n    }\n}\n\n                                      "]},"metadata":{},"sourceType":"module"}