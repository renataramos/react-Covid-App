{"ast":null,"code":"var _jsxFileName = \"/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/HomeMap.js\";\nimport React from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport styled from 'styled-components';\nconst Wrapper = styled.div`\n    width: ${props => props.width};\n    height: ${props => props.height};`;\nexport default class HomeMap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      layers: [],\n      activeView: props.activeView\n    }; //this.clearLayers = this.clearLayers.bind(this)\n\n    this.addLayer = this.addLayer.bind(this);\n  }\n  /*clearLayers(){\n      this.setState({\n          layers: []\n      })\n  }\n   addLayer(layer){\n      this.setState((currentState)=>{\n          return {\n              layers: currentState.layers.concat([{layer}])\n          }\n      })\n  }*/\n\n\n  componentDidMount() {\n    this.map = L.map('map', {\n      center: [40, 0],\n      zoom: 2\n    });\n    L.tileLayer('https://tile.openstreetmap.bzh/br/{z}/{x}/{y}.png', {\n      maxNativeZoom: 20,\n      maxZoom: 20,\n      attribution: '&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n    }).addTo(this.map);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.activeView === 'cases') {\n      this.props.countries.sort((a, b) => b.cases - a.cases).slice(0, 20).map(element => {\n        const circleRadius = element.cases / 25000;\n        const circle = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {\n          color: 'orange',\n          radius: circleRadius\n        }).addTo(this.map); //this.addLayer(circle)\n\n        return circle;\n      });\n    }\n\n    if (this.props.activeView === 'recovered') {\n      this.props.countries.sort((a, b) => b.recovered - a.recovered).slice(0, 20).map(element => {\n        const circleRadius = element.recovered / 25000;\n        return L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {\n          color: 'green',\n          radius: circleRadius\n        }).addTo(this.map);\n      });\n    }\n\n    if (this.props.activeView === 'deaths') {\n      this.props.countries.sort((a, b) => b.deaths - a.deaths).slice(0, 20).map(element => {\n        const circleRadius = element.deaths / 9000;\n        return L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {\n          color: 'red',\n          radius: circleRadius\n        }).addTo(this.map);\n      });\n    }\n\n    if (prevState.activeView !== this.state.activeView) {\n      if (this.props.activeView === 'cases') {\n        this.props.countries.sort((a, b) => b.cases - a.cases).slice(0, 20).map(element => {\n          const circleRadius = element.cases / 25000;\n          const circle = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {\n            color: 'orange',\n            radius: circleRadius\n          }).addTo(this.map);\n          this.addLayer(circle);\n          return circle;\n        });\n      }\n\n      if (this.props.activeView === 'recovered') {\n        this.props.countries.sort((a, b) => b.recovered - a.recovered).slice(0, 20).map(element => {\n          const circleRadius = element.recovered / 25000;\n          return L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {\n            color: 'green',\n            radius: circleRadius\n          }).addTo(this.map);\n        });\n      }\n\n      if (this.props.activeView === 'deaths') {\n        this.props.countries.sort((a, b) => b.deaths - a.deaths).slice(0, 20).map(element => {\n          const circleRadius = element.deaths / 9000;\n          return L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {\n            color: 'red',\n            radius: circleRadius\n          }).addTo(this.map);\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      width: \"1100px\",\n      height: \"730px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 16\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/HomeMap.js"],"names":["React","L","styled","Wrapper","div","props","width","height","HomeMap","Component","constructor","state","layers","activeView","addLayer","bind","componentDidMount","map","center","zoom","tileLayer","maxNativeZoom","maxZoom","attribution","addTo","componentDidUpdate","prevProps","prevState","countries","sort","a","b","cases","slice","element","circleRadius","circle","circleMarker","countryInfo","lat","long","color","radius","recovered","deaths","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    width: ${props => props.width};\n    height: ${props => props.height};`\n\nexport default class HomeMap extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            layers: [],\n            activeView: props.activeView\n        }\n\n        //this.clearLayers = this.clearLayers.bind(this)\n        this.addLayer = this.addLayer.bind(this)\n    }\n\n    /*clearLayers(){\n        this.setState({\n            layers: []\n        })\n    }\n\n    addLayer(layer){\n        this.setState((currentState)=>{\n            return {\n                layers: currentState.layers.concat([{layer}])\n            }\n        })\n    }*/\n\n    componentDidMount(){\n        this.map = L.map('map', {\n            center: [40, 0],\n            zoom: 2,\n          });\n\n\n        L.tileLayer('https://tile.openstreetmap.bzh/br/{z}/{x}/{y}.png', {\n        maxNativeZoom: 20,\n        maxZoom: 20,\n\t    attribution: '&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n        }).addTo(this.map);\n        \n    }\n\n    componentDidUpdate(prevProps, prevState){\n\n        if(this.props.activeView ==='cases'){\n            this.props.countries.sort((a,b) => b.cases - a.cases)\n            .slice(0,20)\n            .map((element) => {\n                const circleRadius = element.cases/25000;\n                const circle = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {color: 'orange', radius: circleRadius}).addTo(this.map)\n                //this.addLayer(circle)\n                return circle;\n            });\n        }\n\n        if(this.props.activeView ==='recovered'){\n            this.props.countries.sort((a,b) => b.recovered - a.recovered)\n            .slice(0,20)\n            .map((element) => {\n                const circleRadius = element.recovered/25000;\n                return L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {color: 'green', radius: circleRadius}).addTo(this.map)\n            });\n        }\n\n        if(this.props.activeView ==='deaths'){\n\n\n            this.props.countries.sort((a,b) => b.deaths - a.deaths)\n            .slice(0,20)\n            .map((element) => {\n                const circleRadius = element.deaths/9000;\n                return L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {color: 'red', radius: circleRadius}).addTo(this.map)\n            });\n        }\n        if (prevState.activeView !== this.state.activeView){\n            if(this.props.activeView ==='cases'){\n                this.props.countries.sort((a,b) => b.cases - a.cases)\n                .slice(0,20)\n                .map((element) => {\n                    const circleRadius = element.cases/25000;\n                    const circle = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {color: 'orange', radius: circleRadius}).addTo(this.map)\n                    this.addLayer(circle)\n                    return circle;\n                });\n            }\n    \n            if(this.props.activeView ==='recovered'){\n                this.props.countries.sort((a,b) => b.recovered - a.recovered)\n                .slice(0,20)\n                .map((element) => {\n                    const circleRadius = element.recovered/25000;\n                    return L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {color: 'green', radius: circleRadius}).addTo(this.map)\n                });\n            }\n    \n            if(this.props.activeView ==='deaths'){\n    \n    \n                this.props.countries.sort((a,b) => b.deaths - a.deaths)\n                .slice(0,20)\n                .map((element) => {\n                    const circleRadius = element.deaths/9000;\n                    return L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {color: 'red', radius: circleRadius}).addTo(this.map)\n                });\n            }\n\n\n\n        }\n    }\n\n    render(){\n        return <Wrapper width=\"1100px\" height=\"730px\"/>\n\n    }\n}"]},"metadata":{},"sourceType":"module"}