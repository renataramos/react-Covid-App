{"ast":null,"code":"var _jsxFileName = \"/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/CountryDetails.js\";\nimport React from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nexport default function Country() {\n  const [country, setCountry] = useState({});\n  const [flag, setFlag] = useState({});\n  const {\n    countryID\n  } = useParams();\n\n  async function fetchData() {\n    const data = await fetch(`https://disease.sh/v2/countries/${countryID}`);\n    console.log(api_call.status);\n    return data.json();\n  }\n\n  useEffect(() => {\n    let isMounted = true;\n    fetchData().then(data => {\n      if (isMounted) {\n        setCountry(data);\n        setFlag(data.countryInfo.flag);\n      }\n    });\n    return () => isMounted = false;\n  });\n\n  const convertToMillion = function (number) {\n    return Math.round(number / 1000000);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"country-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"country-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, country.country)), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"_in \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, country.continent))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"country-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: flag,\n    alt: \"flag of the country in question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, country.cases, \" infected, \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 42\n    }\n  }, \"of which \", country.critical, \" are in critical status\"), \".\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, country.deaths, \" deaths, \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 41\n    }\n  }, \" of which \", country.todayDeaths, \" people died today\"), \". \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, country.recovered, \" recovered, \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 47\n    }\n  }, \"and \", country.todayCases, \" new cases were diagnosed\"), \".\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, country.tests, \" tests, \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 39\n    }\n  }, \"in a country of \", convertToMillion(country.population), \" million inhabitants\"), \".\"))))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    id: \"homeBtn\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    id: \"homeBtn\",\n    className: \"fas fa-home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 39\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/CountryDetails.js"],"names":["React","useParams","Link","useEffect","useState","Country","country","setCountry","flag","setFlag","countryID","fetchData","data","fetch","console","log","api_call","status","json","isMounted","then","countryInfo","convertToMillion","number","Math","round","continent","cases","critical","deaths","todayDeaths","recovered","todayCases","tests","population"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useParams, Link} from 'react-router-dom'\nimport {useEffect, useState} from 'react'\n\n\n\n\n\nexport default function Country() {\n\n    const [country, setCountry] = useState({})\n    const [flag, setFlag] = useState({}) \n    \n    const {countryID} = useParams();\n\n        async function fetchData(){\n            const data = await fetch(`https://disease.sh/v2/countries/${countryID}`)\n            console.log(api_call.status);\n            \n            return data.json()\n        }\n\n        useEffect(()=>{\n            let isMounted= true;\n            \n            fetchData().then((data)=> {\n                if (isMounted){\n                    setCountry(data)\n                    setFlag(data.countryInfo.flag)\n                }    \n            })\n            return () => isMounted = false});\n    \n    \n        const convertToMillion = function(number){\n            return Math.round(number/1000000);\n        }\n        return (\n            <div id=\"country-container\">\n            <div id=\"country-title\">\n            <h3><strong>{country.country}</strong></h3>\n            <h5>_in <em>{country.continent}</em></h5>\n            </div>\n            <div id=\"country-card\">\n            <div id =\"details\">\n            <table>\n            <thead>\n            <tr>\n            <td><img src={flag} alt=\"flag of the country in question\"></img>\n            </td>\n            <td>\n            <div id=\"details\">\n            <p>{country.cases} infected, <strong>of which {country.critical} are in critical status</strong>.</p>\n            <p>{country.deaths} deaths, <strong> of which {country.todayDeaths} people died today</strong>. </p>\n            <p>{country.recovered} recovered, <strong>and {country.todayCases} new cases were diagnosed</strong>.</p>\n            <p>{country.tests} tests, <strong>in a country of {convertToMillion(country.population)} million inhabitants</strong>.</p>\n            </div>\n            </td> \n            </tr>\n            </thead>\n            </table>\n            </div>\n            <br></br>\n            <Link id=\"homeBtn\" to=\"/\"><i id=\"homeBtn\" className=\"fas fa-home\"/></Link>\n            </div>\n            \n            </div>\n    \n        )\n    \n    }\n\n        \n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}