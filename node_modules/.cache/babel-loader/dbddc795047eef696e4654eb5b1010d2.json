{"ast":null,"code":"var _jsxFileName = \"/Users/utilizador/Documents/academia/LocalRepo/covid-react-app/src/components/CountriesList.js\";\nimport React from 'react';\nimport CountryPage from './CountryPage.js';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nexport default function CountriesList(props) {\n  if (props.activeView === 'cases') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"num\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, props.casesNum)), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, props.countries.sort((a, b) => b.cases - a.cases).slice(0, 10).map(element => /*#__PURE__*/React.createElement(\"li\", {\n      key: element.countryInfo._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/${element.country}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }\n    }, element.country), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }, element.country), \" : \", element.cases, /*#__PURE__*/React.createElement(Route, {\n      path: `/${element.country}`,\n      render: () => {\n        return /*#__PURE__*/React.createElement(CountryPage, {\n          country: element,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    })))));\n  }\n\n  if (props.activeView === 'deaths') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"num\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, props.deathsNum)), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, props.countries.sort((a, b) => b.deaths - a.deaths).slice(0, 10).map(element => /*#__PURE__*/React.createElement(\"li\", {\n      key: element.countryInfo._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, element.country), \" : \", element.deaths))));\n  }\n\n  if (props.activeView === 'recovered') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"num\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, props.recoveredNum)), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, props.countries.sort((a, b) => b.recovered - a.recovered).slice(0, 10).map(element => /*#__PURE__*/React.createElement(\"li\", {\n      key: element.countryInfo._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, element.country), \" : \", element.recovered))));\n  }\n}","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/covid-react-app/src/components/CountriesList.js"],"names":["React","CountryPage","BrowserRouter","Route","Link","CountriesList","props","activeView","casesNum","countries","sort","a","b","cases","slice","map","element","countryInfo","_id","country","deathsNum","deaths","recoveredNum","recovered"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CountryPage from './CountryPage.js'\nimport {\n    BrowserRouter,\n    Route,\n    Link\n} from 'react-router-dom'\n\n\nexport default function CountriesList(props){\n\n    if (props.activeView === 'cases'){\n        return (\n            <div id=\"container\">\n\n            <div id=\"num\">\n                <h3>{props.casesNum}</h3>\n            </div>\n            <ul>\n                {props.countries.sort((a,b)=> b.cases - a.cases)\n                    .slice(0,10)\n                    .map((element)=>(\n                    <li key = {element.countryInfo._id}>\n                        <Link to={`/${element.country}`}>{element.country}</Link>\n                        <strong>{element.country}</strong> : {element.cases} \n                        <Route path={`/${element.country}`} render={()=>{\n                            return (\n                                <CountryPage\n                                country={element}\n                                />\n                            )\n                        }}/>\n                    </li>\n                    \n                ))}\n            </ul>   \n            </div>\n        )\n    }\n\n    if (props.activeView === 'deaths'){\n        return (\n            <div id=\"container\">\n            <div id=\"num\">\n                <h3>{props.deathsNum}</h3>\n            </div>\n            <ul>\n                {props.countries.sort((a,b)=> b.deaths - a.deaths)\n                    .slice(0,10)\n                    .map((element)=>(\n                    <li key = {element.countryInfo._id}>\n                        <strong>{element.country}</strong> : {element.deaths}\n                    </li>\n                ))}\n            </ul>   \n            </div>\n        )\n    }\n\n    if (props.activeView === 'recovered'){\n        return (\n            <div id=\"container\">\n            <div id=\"num\">\n                <h3>{props.recoveredNum}</h3>\n            </div>\n            <ul>\n                {props.countries.sort((a,b)=> b.recovered - a.recovered)\n                    .slice(0,10)\n                    .map((element)=>(\n                    <li key = {element.countryInfo._id}>\n                        <strong>{element.country}</strong> : {element.recovered}\n                    </li>\n                ))}\n            </ul>   \n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}