{"ast":null,"code":"var _jsxFileName = \"/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/Home.js\";\nimport React from 'react';\nimport CountriesList from './CountriesList.js';\nimport NavBar from './NavBar.js';\nimport Input from './Input.js';\nimport Map from './Map.js';\nimport Loading from './L';\n\nasync function fetchGlobalData() {\n  const api = `https://disease.sh/v2/all`;\n  const response = await fetch(api);\n  const content = await response.json();\n  return content;\n}\n\nasync function fetchCountriesData() {\n  const api = `https://disease.sh/v2/countries`;\n  const response = await fetch(api);\n  const content = await response.json();\n  return content;\n}\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      casesNum: 0,\n      recoveredNum: 0,\n      deathsNum: 0,\n      activeView: 'cases',\n      countries: [],\n      input: '',\n      filtered: false,\n      loading: true\n    };\n    this._isMounted = false;\n    this.handleGlobalData = this.handleGlobalData.bind(this);\n    this.handleCountriesData = this.handleCountriesData.bind(this);\n    this.handleSelectView = this.handleSelectView.bind(this);\n    this.updateInput = this.updateInput.bind(this);\n    this.toggleFiltered = this.toggleFiltered.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleGlobalData();\n    this.handleCountriesData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.activeView !== this.state.activeView) {\n      this.handleGlobalData();\n      this.handleCountriesData();\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  handleGlobalData() {\n    this.setState({\n      loading: true\n    });\n    fetchGlobalData().then(data => {\n      this.setState({\n        loading: false,\n        casesNum: data.cases,\n        recoveredNum: data.recovered,\n        deathsNum: data.deaths\n      });\n    });\n  }\n\n  handleCountriesData() {\n    fetchCountriesData().then(data => {\n      this.setState({\n        countries: data\n      });\n    });\n  }\n\n  handleSelectView(viewName) {\n    this.setState({\n      activeView: viewName\n    });\n  }\n\n  updateInput(event) {\n    const value = event.target.value;\n    this.setState({\n      input: value\n    });\n  }\n\n  toggleFiltered() {\n    const filtered = this.state.filtered;\n    this.setState({\n      filtered: !filtered\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, this.state.loading === true ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      id: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      onSelectView: this.handleSelectView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      value: this.state.input,\n      onInputChange: this.updateInput,\n      onSubmit: this.toggleFiltered,\n      isFiltered: this.state.filtered,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(CountriesList, {\n      casesNum: this.state.casesNum,\n      recoveredNum: this.state.recoveredNum,\n      deathsNum: this.state.deathsNum,\n      countries: this.state.countries,\n      activeView: this.state.activeView,\n      input: this.state.input,\n      isFiltered: this.state.filtered,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      activeView: this.state.activeView,\n      countries: this.state.countries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    }))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/Home.js"],"names":["React","CountriesList","NavBar","Input","Map","Loading","fetchGlobalData","api","response","fetch","content","json","fetchCountriesData","Home","Component","constructor","props","state","casesNum","recoveredNum","deathsNum","activeView","countries","input","filtered","loading","_isMounted","handleGlobalData","bind","handleCountriesData","handleSelectView","updateInput","toggleFiltered","componentDidMount","componentDidUpdate","prevProps","prevState","componentWillUnmount","setState","then","data","cases","recovered","deaths","viewName","event","value","target","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,OAAP,MAAoB,KAApB;;AAEA,eAAeC,eAAf,GAAgC;AAC5B,QAAMC,GAAG,GAAI,2BAAb;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,QAAMG,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AAEA,SAAOD,OAAP;AACH;;AAED,eAAeE,kBAAf,GAAmC;AAC/B,QAAML,GAAG,GAAI,iCAAb;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,QAAMG,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AAEA,SAAOD,OAAP;AACH;;AAED,eAAe,MAAMG,IAAN,SAAmBb,KAAK,CAACc,SAAzB,CAAmC;AAE9CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,CADD;AAETC,MAAAA,YAAY,EAAE,CAFL;AAGTC,MAAAA,SAAS,EAAE,CAHF;AAITC,MAAAA,UAAU,EAAE,OAJH;AAKTC,MAAAA,SAAS,EAAE,EALF;AAMTC,MAAAA,KAAK,EAAE,EANE;AAOTC,MAAAA,QAAQ,EAAE,KAPD;AAQTC,MAAAA,OAAO,EAAE;AARA,KAAb;AAUA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBD,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKG,WAAL,GAAmB,KAAKA,WAAL,CAAiBH,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKI,cAAL,GAAsB,KAAKA,cAAL,CAAoBJ,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAEDK,EAAAA,iBAAiB,GAAE;AACf,SAAKN,gBAAL;AACA,SAAKE,mBAAL;AACH;;AAEDK,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACpC,QAAIA,SAAS,CAACf,UAAV,KAAyB,KAAKJ,KAAL,CAAWI,UAAxC,EAAmD;AAC/C,WAAKM,gBAAL;AACA,WAAKE,mBAAL;AACH;AACJ;;AAEDQ,EAAAA,oBAAoB,GAAE;AAClB,SAAKX,UAAL,GAAkB,KAAlB;AACH;;AAEDC,EAAAA,gBAAgB,GAAE;AACd,SAAKW,QAAL,CAAc;AACVb,MAAAA,OAAO,EAAE;AADC,KAAd;AAGAnB,IAAAA,eAAe,GACdiC,IADD,CACOC,IAAD,IAAS;AACX,WAAKF,QAAL,CAAc;AACVb,QAAAA,OAAO,EAAE,KADC;AAEVP,QAAAA,QAAQ,EAAEsB,IAAI,CAACC,KAFL;AAGVtB,QAAAA,YAAY,EAAEqB,IAAI,CAACE,SAHT;AAIVtB,QAAAA,SAAS,EAAEoB,IAAI,CAACG;AAJN,OAAd;AAMH,KARD;AASH;;AAEDd,EAAAA,mBAAmB,GAAE;AACjBjB,IAAAA,kBAAkB,GACjB2B,IADD,CACOC,IAAD,IAAQ;AACV,WAAKF,QAAL,CAAc;AACVhB,QAAAA,SAAS,EAAEkB;AADD,OAAd;AAGH,KALD;AAMH;;AAEDV,EAAAA,gBAAgB,CAACc,QAAD,EAAU;AACtB,SAAKN,QAAL,CAAc;AACVjB,MAAAA,UAAU,EAAEuB;AADF,KAAd;AAGH;;AAEDb,EAAAA,WAAW,CAACc,KAAD,EAAO;AACd,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AAEA,SAAKR,QAAL,CAAc;AACVf,MAAAA,KAAK,EAAEuB;AADG,KAAd;AAGH;;AAEDd,EAAAA,cAAc,GAAE;AACZ,UAAMR,QAAQ,GAAG,KAAKP,KAAL,CAAWO,QAA5B;AAEA,SAAKc,QAAL,CAAc;AACVd,MAAAA,QAAQ,EAAE,CAACA;AADD,KAAd;AAGH;;AAEDwB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAK/B,KAAL,CAAWQ,OAAX,KAAuB,IAAvB,gBACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,gBAGD;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,MAAD;AACA,MAAA,YAAY,EAAE,KAAKK,gBADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAOI;AAAK,MAAA,EAAE,EAAG,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACA,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWM,KADlB;AAEA,MAAA,aAAa,EAAE,KAAKQ,WAFpB;AAGA,MAAA,QAAQ,EAAE,KAAKC,cAHf;AAIA,MAAA,UAAU,EAAE,KAAKf,KAAL,CAAWO,QAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAQI,oBAAC,aAAD;AACA,MAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWC,QADrB;AAEA,MAAA,YAAY,EAAE,KAAKD,KAAL,CAAWE,YAFzB;AAGA,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWG,SAHtB;AAIA,MAAA,SAAS,EAAE,KAAKH,KAAL,CAAWK,SAJtB;AAKA,MAAA,UAAU,EAAE,KAAKL,KAAL,CAAWI,UALvB;AAMA,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWM,KANlB;AAOA,MAAA,UAAU,EAAE,KAAKN,KAAL,CAAWO,QAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CAPJ,CADJ,CADJ,eA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AACA,MAAA,UAAU,EAAE,KAAKP,KAAL,CAAWI,UADvB;AAEA,MAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWK,SAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CA7BJ,CADJ,CADA,CADJ,CAJA,CADJ;AAoDC;;AAzIyC","sourcesContent":["import React from 'react';\nimport CountriesList from './CountriesList.js'\nimport NavBar from './NavBar.js'\nimport Input from './Input.js'\nimport Map from './Map.js'\nimport Loading from './L'\n\nasync function fetchGlobalData(){\n    const api = `https://disease.sh/v2/all`;\n    const response = await fetch(api);\n    const content = await response.json();\n  \n    return content;\n}\n\nasync function fetchCountriesData(){\n    const api = `https://disease.sh/v2/countries`;\n    const response = await fetch(api);\n    const content = await response.json();\n\n    return content;\n}\n\nexport default class Home extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            casesNum: 0,\n            recoveredNum: 0,\n            deathsNum: 0,\n            activeView: 'cases',\n            countries: [],\n            input: '',\n            filtered: false,\n            loading: true\n        }\n        this._isMounted = false\n        this.handleGlobalData = this.handleGlobalData.bind(this)\n        this.handleCountriesData = this.handleCountriesData.bind(this)\n        this.handleSelectView = this.handleSelectView.bind(this)\n        this.updateInput = this.updateInput.bind(this)\n        this.toggleFiltered = this.toggleFiltered.bind(this)\n    }\n\n    componentDidMount(){\n        this.handleGlobalData()\n        this.handleCountriesData();\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if (prevState.activeView !== this.state.activeView){\n            this.handleGlobalData();\n            this.handleCountriesData();\n        }\n    }\n\n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n\n    handleGlobalData(){\n        this.setState({\n            loading: true\n        })\n        fetchGlobalData()\n        .then((data) =>{\n            this.setState({\n                loading: false,\n                casesNum: data.cases,\n                recoveredNum: data.recovered,\n                deathsNum: data.deaths\n            })\n        })\n    }\n\n    handleCountriesData(){\n        fetchCountriesData()\n        .then((data)=>{\n            this.setState({\n                countries: data\n            })\n        })\n    }\n\n    handleSelectView(viewName){\n        this.setState({\n            activeView: viewName\n        })\n    }\n\n    updateInput(event){\n        const value = event.target.value\n\n        this.setState({\n            input: value\n        })\n    }\n\n    toggleFiltered(){\n        const filtered = this.state.filtered;\n        \n        this.setState({\n            filtered: !filtered\n        })\n    }\n\n    render(){\n        return (\n            <div>\n            {this.state.loading === true\n            ? <Loading/>\n            :\n            <div id=\"content\">\n                <table>\n                <thead>\n                    <tr>\n                        <td>\n                            <div id=\"list\">\n                            \n                                <NavBar \n                                onSelectView={this.handleSelectView}\n                                />\n                                \n                                \n                                <div id = \"container\">\n                                    <Input\n                                    value={this.state.input}\n                                    onInputChange={this.updateInput}\n                                    onSubmit={this.toggleFiltered}\n                                    isFiltered={this.state.filtered}\n                                    />\n                                    \n                                    <CountriesList\n                                    casesNum={this.state.casesNum}\n                                    recoveredNum={this.state.recoveredNum}\n                                    deathsNum={this.state.deathsNum}\n                                    countries={this.state.countries}\n                                    activeView={this.state.activeView}\n                                    input={this.state.input}\n                                    isFiltered={this.state.filtered}\n                                    />\n                                </div>\n                            </div>\n                        </td>\n                        <td>\n                            <div id=\"map\">\n                                <Map \n                                activeView={this.state.activeView}\n                                countries={this.state.countries}\n                                />\n                            </div>\n                        </td>\n                    </tr>\n                </thead>\n                </table>\n            </div>\n            }\n            </div>\n            )\n        }   \n}"]},"metadata":{},"sourceType":"module"}