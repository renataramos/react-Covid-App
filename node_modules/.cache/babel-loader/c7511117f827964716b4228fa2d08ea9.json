{"ast":null,"code":"var _jsxFileName = \"/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/country-global/CountriesList.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction conditionalStyling(activeView) {\n  if (activeView === 'cases') {\n    return \"orange\";\n  }\n\n  if (activeView === 'deaths') {\n    return \"red\";\n  }\n}\n\nexport default function CountriesList(props) {\n  if (!props.isFiltered) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"num\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        color: 'orange'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 55\n      }\n    }, \"total of \", props.activeView, \":\")), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: 'orange'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 55\n      }\n    }, props[props.activeView]))), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }, props.countries.sort((a, b) => b[props.activeView] - a[props.activeView]).slice(0, 40).map(element => /*#__PURE__*/React.createElement(\"li\", {\n      key: element.countryInfo._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      id: \"link\",\n      to: `/${element.country}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 37\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 81\n      }\n    }, element.country), \" : \", element[props.activeView], \" \")))));\n  }\n\n  if (props.isFiltered) {\n    if (props.activeView === 'cases') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"num\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        style: {\n          color: 'orange'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 55\n        }\n      }, \"total of cases:\")), /*#__PURE__*/React.createElement(\"h3\", {\n        style: {\n          color: 'orange'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 55\n        }\n      }, props.cases))), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, props.countries.filter(country => country.country === props.input).map(element => /*#__PURE__*/React.createElement(\"li\", {\n        key: element.countryInfo._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        id: \"link\",\n        to: `/${element.country}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 41\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 85\n        }\n      }, element.country), \" : \", element.cases, \" \")))));\n    }\n\n    if (props.activeView === 'recovered') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"num\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        style: {\n          color: 'green'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 54\n        }\n      }, \"total of recovered:\")), /*#__PURE__*/React.createElement(\"h3\", {\n        style: {\n          color: 'green'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 54\n        }\n      }, props.recovered))), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, props.countries.filter(country => country.country === props.input).map(element => /*#__PURE__*/React.createElement(\"li\", {\n        key: element.countryInfo._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        id: \"link\",\n        to: `/${element.country}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 41\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 85\n        }\n      }, element.country), \" : \", element.recovered, \" \")))));\n    }\n\n    if (props.activeView === 'deaths') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"num\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 52\n        }\n      }, \"total of deaths:\")), /*#__PURE__*/React.createElement(\"h3\", {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 52\n        }\n      }, props.deaths))), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }, props.countries.filter(country => country.country === props.input).map(element => /*#__PURE__*/React.createElement(\"li\", {\n        key: element.countryInfo._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        id: \"link\",\n        to: `/${element.country}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 41\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 85\n        }\n      }, element.country), \" : \", element.deaths, \" \")))));\n    }\n  }\n}","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/country-global/CountriesList.js"],"names":["React","Link","conditionalStyling","activeView","CountriesList","props","isFiltered","color","countries","sort","a","b","slice","map","element","countryInfo","_id","country","cases","filter","input","recovered","deaths"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Link,\n} from 'react-router-dom'\n\nfunction conditionalStyling(activeView){\n    if (activeView === 'cases'){\n        return \"orange\";\n    }\n    if (activeView === 'deaths'){\n        return \"red\"\n    }\n}\n\nexport default function CountriesList(props){\n\n    if (!props.isFiltered){\n        \n            return (\n                    <div>\n                    \n                    <div id=\"num\">\n                        <h5 style={{color: 'orange'}}><strong>total of {props.activeView}:</strong></h5> \n                        <h3 style={{color: 'orange'}}><strong>{props[props.activeView]}</strong></h3>\n                    </div>\n                        <ol>\n                        {props.countries.sort((a,b)=> b[props.activeView] - a[props.activeView])\n                            .slice(0,40)\n                            .map((element)=>(\n                                <li key = {element.countryInfo._id}>\n                                    <Link id=\"link\" to={`/${element.country}`}> <strong>{element.country}</strong> : {element[props.activeView]} </Link>\n                                </li>\n                            ))}\n                        </ol>   \n                    </div>\n            )\n        \n    \n        \n    }\n\n    if (props.isFiltered){\n        if(props.activeView === 'cases'){\n            return (\n                <div>\n                    <div id=\"num\">\n                        <h5 style={{color: 'orange'}}><strong>total of cases:</strong></h5> \n                        <h3 style={{color: 'orange'}}><strong>{props.cases}</strong></h3>\n                    </div>\n                        <ul>\n                            {props.countries.filter((country)=>country.country === props.input)\n                                .map((element)=>(\n                                    <li key = {element.countryInfo._id}>\n                                        <Link id=\"link\" to={`/${element.country}`}> <strong>{element.country}</strong> : {element.cases} </Link>\n                                    </li>\n                                ))}\n                        </ul>   \n                </div>)\n\n        }\n\n        if(props.activeView === 'recovered'){\n            return (\n                <div>\n                    <div id=\"num\">\n                        <h5 style={{color: 'green'}}><strong>total of recovered:</strong></h5> \n                        <h3 style={{color: 'green'}}><strong>{props.recovered}</strong></h3>\n                    </div>\n                        <ul>\n                            {props.countries.filter((country)=>country.country === props.input)\n                                .map((element)=>(\n                                    <li key = {element.countryInfo._id}>\n                                        <Link id=\"link\" to={`/${element.country}`}> <strong>{element.country}</strong> : {element.recovered} </Link>\n                                    </li>\n                                ))}\n                        </ul>   \n                </div>) \n\n        }\n\n        if(props.activeView === 'deaths'){\n\n            return (\n                <div>\n                    <div id=\"num\">\n                        <h5 style={{color: 'red'}}><strong>total of deaths:</strong></h5> \n                        <h3 style={{color: 'red'}}><strong>{props.deaths}</strong></h3>\n                    </div>\n                        <ul>\n                            {props.countries.filter((country)=>country.country === props.input)\n                                .map((element)=>(\n                                    <li key = {element.countryInfo._id}>\n                                        <Link id=\"link\" to={`/${element.country}`}> <strong>{element.country}</strong> : {element.deaths} </Link>\n                                    </li>\n                                ))}\n                        </ul> \n                </div>)\n        }\n    }\n}\n\n                                      "]},"metadata":{},"sourceType":"module"}