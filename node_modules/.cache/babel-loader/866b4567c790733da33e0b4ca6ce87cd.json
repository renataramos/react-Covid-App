{"ast":null,"code":"var _jsxFileName = \"/Users/utilizador/Documents/academia/LocalRepo/covid-react-app/src/components/CountryPage.js\";\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\n\nasync function fetchCountryData(countryName) {\n  const api = `https://disease.sh/v2/countries/${countryName}`;\n  const response = await fetch(api);\n  const content = await response.json();\n  return content;\n}\n\nexport default class Country extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      country: {}\n    };\n    this.handleFetchData = this.handleFetchData.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      countryID\n    } = useParams();\n    this.handleFetchData(countryID);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.country !== this.state.country) {\n      const globalPath = window.location.hash.split(\"/\");\n      const query = globalPath[1];\n      this.handleFetchData(query);\n    }\n  }\n\n  handleFetchData(countryName) {\n    fetchCountryData(countryName).then(data => {\n      this.setState({\n        country: data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, this.state.country.country);\n  }\n\n}","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/covid-react-app/src/components/CountryPage.js"],"names":["React","useParams","fetchCountryData","countryName","api","response","fetch","content","json","Country","Component","constructor","props","state","country","handleFetchData","bind","componentDidMount","countryID","componentDidUpdate","prevProps","prevState","globalPath","window","location","hash","split","query","then","data","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;;AAEA,eAAeC,gBAAf,CAAgCC,WAAhC,EAA4C;AACxC,QAAMC,GAAG,GAAI,mCAAkCD,WAAY,EAA3D;AACA,QAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,QAAMG,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AAEA,SAAOD,OAAP;AACH;;AAGD,eAAe,MAAME,OAAN,SAAsBT,KAAK,CAACU,SAA5B,CAAqC;AAEhDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AAEf,UAAM;AAACC,MAAAA;AAAD,QAAcjB,SAAS,EAA7B;AACA,SAAKc,eAAL,CAAqBG,SAArB;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACpC,QAAIA,SAAS,CAACP,OAAV,KAAsB,KAAKD,KAAL,CAAWC,OAArC,EAA6C;AACzC,YAAMQ,UAAU,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,CAAnB;AACA,YAAMC,KAAK,GAAGL,UAAU,CAAC,CAAD,CAAxB;AAEA,WAAKP,eAAL,CAAqBY,KAArB;AACH;AACJ;;AAEDZ,EAAAA,eAAe,CAACZ,WAAD,EAAa;AACxBD,IAAAA,gBAAgB,CAACC,WAAD,CAAhB,CACCyB,IADD,CACOC,IAAD,IAAQ;AACV,WAAKC,QAAL,CAAc;AACVhB,QAAAA,OAAO,EAAEe;AADC,OAAd;AAGH,KALD;AAMH;;AAEDE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKlB,KAAL,CAAWC,OAAX,CAAmBA,OAAxB,CADJ;AAGH;;AAtC+C","sourcesContent":["import React from 'react';\nimport {useParams} from 'react-router-dom'\n\nasync function fetchCountryData(countryName){\n    const api = `https://disease.sh/v2/countries/${countryName}`;\n    const response = await fetch(api);\n    const content = await response.json();\n\n    return content;\n}\n\n\nexport default class Country extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            country: {}\n        }\n        this.handleFetchData = this.handleFetchData.bind(this)\n    }\n\n    componentDidMount(){\n       \n        const {countryID} = useParams();\n        this.handleFetchData(countryID)\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if (prevState.country !== this.state.country){\n            const globalPath = window.location.hash.split(\"/\");\n            const query = globalPath[1];\n    \n            this.handleFetchData(query) \n        }\n    }\n\n    handleFetchData(countryName){\n        fetchCountryData(countryName)\n        .then((data)=>{\n            this.setState({\n                country: data\n            })\n        })\n    }\n\n    render(){\n        return (\n            <h1>{this.state.country.country}</h1>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}