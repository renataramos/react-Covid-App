{"ast":null,"code":"var _jsxFileName = \"/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/Map.js\";\nimport React from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport styled from 'styled-components';\nconst Wrapper = styled.div`\n    width: ${props => props.width};\n    height: ${props => props.height};`;\nexport default class Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      layerGroup: L.layerGroup([])\n    };\n  }\n\n  componentDidMount() {\n    this.map = L.map('map', {\n      center: [40, 0],\n      zoom: 2,\n      scrollWheelZoom: false\n    });\n    L.tileLayer('https://tile.openstreetmap.bzh/br/{z}/{x}/{y}.png', {\n      maxNativeZoom: 20,\n      maxZoom: 20,\n      attribution: '&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n    }).addTo(this.map);\n  }\n\n  componentDidUpdate() {\n    this.state.layerGroup.clearLayers();\n\n    if (this.props.isFiltered) {}\n\n    if (this.props.activeView === 'cases') {\n      this.props.countries.sort((a, b) => b.cases - a.cases).slice(0, 20).map(element => {\n        const circleRadius = element.cases / 25000;\n        const layer = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {\n          color: 'orange',\n          radius: circleRadius\n        });\n        this.state.layerGroup.addLayer(layer);\n        return layer;\n      });\n      this.state.layerGroup.addTo(this.map);\n    }\n\n    if (this.props.activeView === 'recovered') {\n      this.props.countries.sort((a, b) => b.recovered - a.recovered).slice(0, 20).map(element => {\n        const circleRadius = element.recovered / 25000;\n        const layer = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {\n          color: 'green',\n          radius: circleRadius\n        });\n        this.state.layerGroup.addLayer(layer);\n        return layer;\n      });\n      this.state.layerGroup.addTo(this.map);\n    }\n\n    if (this.props.activeView === 'deaths') {\n      this.props.countries.sort((a, b) => b.deaths - a.deaths).slice(0, 20).map(element => {\n        const circleRadius = element.deaths / 10000;\n        const layer = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {\n          color: 'red',\n          radius: circleRadius\n        });\n        this.state.layerGroup.addLayer(layer);\n        return layer;\n      });\n      this.state.layerGroup.addTo(this.map);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      width: \"1100px\",\n      height: \"730px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 16\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/Map.js"],"names":["React","L","styled","Wrapper","div","props","width","height","Map","Component","constructor","state","layerGroup","componentDidMount","map","center","zoom","scrollWheelZoom","tileLayer","maxNativeZoom","maxZoom","attribution","addTo","componentDidUpdate","clearLayers","isFiltered","activeView","countries","sort","a","b","cases","slice","element","circleRadius","layer","circleMarker","countryInfo","lat","long","color","radius","addLayer","recovered","deaths","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    width: ${props => props.width};\n    height: ${props => props.height};`\n\nexport default class Map extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            \n            layerGroup: L.layerGroup([])\n        }\n    }\n\n    componentDidMount(){\n        this.map = L.map('map', {\n            center: [40, 0],\n            zoom: 2,\n            scrollWheelZoom: false\n          });\n\n        L.tileLayer('https://tile.openstreetmap.bzh/br/{z}/{x}/{y}.png', {\n        maxNativeZoom: 20,\n        maxZoom: 20,\n\t    attribution: '&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n        }).addTo(this.map);\n    }\n\n    componentDidUpdate(){\n        \n        this.state.layerGroup.clearLayers();\n\n        if(this.props.isFiltered){\n            \n        }\n\n        if(this.props.activeView ==='cases'){\n            this.props.countries.sort((a,b) => b.cases - a.cases)\n            .slice(0,20)\n            .map((element) => {\n                const circleRadius = element.cases/25000;\n                const layer = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {color: 'orange', radius: circleRadius})\n                this.state.layerGroup.addLayer(layer)\n                return layer;\n            });\n            this.state.layerGroup.addTo(this.map)\n        }\n\n        if(this.props.activeView ==='recovered'){\n            this.props.countries.sort((a,b) => b.recovered - a.recovered)\n            .slice(0,20)\n            .map((element) => {\n                const circleRadius = element.recovered/25000;\n                const layer = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {color: 'green', radius: circleRadius})\n                this.state.layerGroup.addLayer(layer)\n                return layer;\n            });\n            this.state.layerGroup.addTo(this.map)\n        }\n\n        if(this.props.activeView ==='deaths'){\n            this.props.countries.sort((a,b) => b.deaths - a.deaths)\n            .slice(0,20)\n            .map((element) => {\n                const circleRadius = element.deaths/10000;\n                const layer = L.circleMarker([element.countryInfo.lat, element.countryInfo.long], {color: 'red', radius: circleRadius})\n                this.state.layerGroup.addLayer(layer)\n                return layer;\n            });\n            this.state.layerGroup.addTo(this.map)\n        }\n    }\n\n    render(){\n        return <Wrapper width=\"1100px\" height=\"730px\"/>\n    }\n}"]},"metadata":{},"sourceType":"module"}