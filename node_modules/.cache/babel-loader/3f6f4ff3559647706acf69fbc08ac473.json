{"ast":null,"code":"var _jsxFileName = \"/Users/utilizador/Documents/academia/LocalRepo/covid-react-app/src/components/CountriesList.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nexport default function CountriesList(props) {\n  if (props.input !== '') {\n    console.log(props.input);\n  }\n\n  if (props.activeView === 'cases') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"num\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: 'orange'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 51\n      }\n    }, props.casesNum))), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }\n    }, props.countries.sort((a, b) => b.cases - a.cases).slice(0, 20).map(element => /*#__PURE__*/React.createElement(\"li\", {\n      key: element.countryInfo._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      id: \"link\",\n      to: `/${element.country}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 33\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 77\n      }\n    }, element.country), \" : \", element.cases, \" \")))));\n  }\n\n  if (props.activeView === 'deaths') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"num\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 48\n      }\n    }, props.deathsNum))), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, props.countries.sort((a, b) => b.deaths - a.deaths).slice(0, 20).map(element => /*#__PURE__*/React.createElement(\"li\", {\n      key: element.countryInfo._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      id: \"link\",\n      to: `/${element.country}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 77\n      }\n    }, element.country), \" : \", element.deaths, \" \")))));\n  }\n\n  if (props.activeView === 'recovered') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"num\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: 'green'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 50\n      }\n    }, props.recoveredNum))), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, props.countries.sort((a, b) => b.recovered - a.recovered).slice(0, 20).map(element => /*#__PURE__*/React.createElement(\"li\", {\n      key: element.countryInfo._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      id: \"link\",\n      to: `/${element.country}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 77\n      }\n    }, element.country), \" : \", element.recovered, \" \")))));\n  }\n}\n/**\n * \n * <Route path={`/${element.country}`} render={()=>{\n                                    return <Country country={element}/>\n                                }}/> \n                                \n                                function filterCountry(input){\n                                    if (props.activeView === 'cases'){\n                                        return(\n                                            \n                                            )\n                                            \n                                            \n                                            \n                                        }\n                                        \n                                        if (props.activeView === 'deaths'){\n                                            \n                                        }\n                                        \n                                        if (props.activeView === 'recovered'){\n                                            \n                                        }\n                                        \n                                        \n                                        \n                                    }\n                                       */\n\n/*#__PURE__*/\nReact.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 39\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  id: \"num\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 39\n  }\n}, /*#__PURE__*/React.createElement(\"h3\", {\n  style: {\n    color: 'orange'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 43\n  }\n}, /*#__PURE__*/React.createElement(\"strong\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 73\n  }\n}, props.casesNum))), /*#__PURE__*/React.createElement(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 43\n  }\n}, props.countries.filter(element => element.name === props.input).map(element => /*#__PURE__*/React.createElement(\"li\", {\n  key: element.countryInfo._id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 51\n  }\n}, /*#__PURE__*/React.createElement(Link, {\n  id: \"link\",\n  to: `/${element.country}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 55\n  }\n}, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 99\n  }\n}, element.country), \" : \", element.cases, \" \")))));","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/covid-react-app/src/components/CountriesList.js"],"names":["React","Link","CountriesList","props","input","console","log","activeView","color","casesNum","countries","sort","a","b","cases","slice","map","element","countryInfo","_id","country","deathsNum","deaths","recoveredNum","recovered","filter","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,IADJ,QAEO,kBAFP;AAKA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAExC,MAAGA,KAAK,CAACC,KAAN,KAAgB,EAAnB,EAAsB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,KAAlB;AACH;;AAED,MAAID,KAAK,CAACI,UAAN,KAAqB,OAAzB,EAAiC;AAC7B,wBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASL,KAAK,CAACM,QAAf,CAA9B,CADJ,CAFA,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCN,KAAK,CAACO,SAAN,CAAgBC,IAAhB,CAAqB,CAACC,CAAD,EAAGC,CAAH,KAAQA,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAAzC,EACIC,KADJ,CACU,CADV,EACY,EADZ,EAEIC,GAFJ,CAESC,OAAD,iBACD;AAAI,MAAA,GAAG,EAAIA,OAAO,CAACC,WAAR,CAAoBC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,MAAT;AAAgB,MAAA,EAAE,EAAG,IAAGF,OAAO,CAACG,OAAQ,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASH,OAAO,CAACG,OAAjB,CAA5C,SAAkFH,OAAO,CAACH,KAA1F,MADJ,CAHP,CADD,CALJ,CADR;AAkBH;;AAED,MAAIX,KAAK,CAACI,UAAN,KAAqB,QAAzB,EAAkC;AAC9B,wBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASL,KAAK,CAACkB,SAAf,CAA3B,CADJ,CADA,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACClB,KAAK,CAACO,SAAN,CAAgBC,IAAhB,CAAqB,CAACC,CAAD,EAAGC,CAAH,KAAQA,CAAC,CAACS,MAAF,GAAWV,CAAC,CAACU,MAA1C,EACIP,KADJ,CACU,CADV,EACY,EADZ,EAEIC,GAFJ,CAESC,OAAD,iBACD;AAAI,MAAA,GAAG,EAAIA,OAAO,CAACC,WAAR,CAAoBC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,MAAT;AAAgB,MAAA,EAAE,EAAG,IAAGF,OAAO,CAACG,OAAQ,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASH,OAAO,CAACG,OAAjB,CAA5C,SAAkFH,OAAO,CAACK,MAA1F,MADJ,CAHP,CADD,CAJJ,CADR;AAgBH;;AAED,MAAInB,KAAK,CAACI,UAAN,KAAqB,WAAzB,EAAqC;AACjC,wBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASL,KAAK,CAACoB,YAAf,CAA7B,CADJ,CADA,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCpB,KAAK,CAACO,SAAN,CAAgBC,IAAhB,CAAqB,CAACC,CAAD,EAAGC,CAAH,KAAQA,CAAC,CAACW,SAAF,GAAcZ,CAAC,CAACY,SAA7C,EACIT,KADJ,CACU,CADV,EACY,EADZ,EAEIC,GAFJ,CAESC,OAAD,iBACD;AAAI,MAAA,GAAG,EAAIA,OAAO,CAACC,WAAR,CAAoBC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,MAAT;AAAgB,MAAA,EAAE,EAAG,IAAGF,OAAO,CAACG,OAAQ,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASH,OAAO,CAACG,OAAjB,CAA5C,SAAkFH,OAAO,CAACO,SAA1F,MADJ,CAHP,CADD,CAJJ,CADR;AAiBH;AACJ;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEA;AAAK,EAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAI,EAAA,KAAK,EAAE;AAAChB,IAAAA,KAAK,EAAE;AAAR,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAASL,KAAK,CAACM,QAAf,CAA9B,CADJ,CAFA,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACCN,KAAK,CAACO,SAAN,CAAgBe,MAAhB,CAAwBR,OAAD,IAAYA,OAAO,CAACS,IAAR,KAAiBvB,KAAK,CAACC,KAA1D,EAEIY,GAFJ,CAESC,OAAD,iBACD;AAAI,EAAA,GAAG,EAAIA,OAAO,CAACC,WAAR,CAAoBC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,IAAD;AAAM,EAAA,EAAE,EAAC,MAAT;AAAgB,EAAA,EAAE,EAAG,IAAGF,OAAO,CAACG,OAAQ,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAASH,OAAO,CAACG,OAAjB,CAA5C,SAAkFH,OAAO,CAACH,KAA1F,MADJ,CAHP,CADD,CALJ","sourcesContent":["import React from 'react';\nimport {\n    Link,\n} from 'react-router-dom'\n\n\nexport default function CountriesList(props){\n\n    if(props.input !== ''){\n        console.log(props.input)\n    }\n\n    if (props.activeView === 'cases'){\n        return (\n                <div>\n                \n                <div id=\"num\">\n                    <h3 style={{color: 'orange'}}><strong>{props.casesNum}</strong></h3>\n                </div>\n                    <ul>\n                    {props.countries.sort((a,b)=> b.cases - a.cases)\n                        .slice(0,20)\n                        .map((element)=>(\n                            <li key = {element.countryInfo._id}>\n                                <Link id=\"link\" to={`/${element.country}`}> <strong>{element.country}</strong> : {element.cases} </Link>\n                            </li>\n                        ))}\n                    </ul>   \n                </div>\n           \n        )\n    }\n\n    if (props.activeView === 'deaths'){\n        return (\n                <div>\n                <div id=\"num\">\n                    <h3 style={{color: 'red'}}><strong>{props.deathsNum}</strong></h3>\n                </div>\n                    <ul>\n                    {props.countries.sort((a,b)=> b.deaths - a.deaths)\n                        .slice(0,20)\n                        .map((element)=>(\n                            <li key = {element.countryInfo._id}>\n                                <Link id=\"link\" to={`/${element.country}`}> <strong>{element.country}</strong> : {element.deaths} </Link>\n                            </li>\n                            ))}\n                    </ul>   \n                </div>\n        )\n    }\n\n    if (props.activeView === 'recovered'){\n        return (\n                <div>\n                <div id=\"num\">\n                    <h3 style={{color: 'green'}}><strong>{props.recoveredNum}</strong></h3>\n                </div>\n                    <ul>\n                    {props.countries.sort((a,b)=> b.recovered - a.recovered)\n                        .slice(0,20)\n                        .map((element)=>(\n                            <li key = {element.countryInfo._id}>\n                                <Link id=\"link\" to={`/${element.country}`}> <strong>{element.country}</strong> : {element.recovered} </Link>\n                            </li>\n                            \n                            ))}\n                    </ul>   \n                </div>\n        )\n    }\n}\n\n/**\n * \n * <Route path={`/${element.country}`} render={()=>{\n                                    return <Country country={element}/>\n                                }}/> \n                                \n                                function filterCountry(input){\n                                    if (props.activeView === 'cases'){\n                                        return(\n                                            \n                                            )\n                                            \n                                            \n                                            \n                                        }\n                                        \n                                        if (props.activeView === 'deaths'){\n                                            \n                                        }\n                                        \n                                        if (props.activeView === 'recovered'){\n                                            \n                                        }\n                                        \n                                        \n                                        \n                                    }\n                                       */\n\n\n                                      <div>\n                \n                                      <div id=\"num\">\n                                          <h3 style={{color: 'orange'}}><strong>{props.casesNum}</strong></h3>\n                                      </div>\n                                          <ul>\n                                          {props.countries.filter((element)=> element.name === props.input)\n    \n                                              .map((element)=>(\n                                                  <li key = {element.countryInfo._id}>\n                                                      <Link id=\"link\" to={`/${element.country}`}> <strong>{element.country}</strong> : {element.cases} </Link>\n                                                  </li>\n                                              ))}\n                                          </ul>   \n                                      </div>"]},"metadata":{},"sourceType":"module"}