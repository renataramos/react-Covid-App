{"ast":null,"code":"var _jsxFileName = \"/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/GlobalChart.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { browserHistory } from 'react-router';\n\nfunction catchError() {\n  //browserHistory.push('/page-not-found')\n  //window.location.reload()\n  console.log(1);\n}\n\nexport default function GlobalChart() {\n  const [data, setData] = useState({});\n\n  async function fetchData() {\n    const content = await fetch(`https://disease.sh/v2/historical/all`);\n\n    if (!content.ok) {\n      throw new Error(\"Not found\");\n    }\n\n    const values = content.json();\n    console.log(values);\n    return values;\n  }\n\n  useEffect(() => {\n    let isMounted = true;\n    fetchData().then(rawElements => {\n      const header = data.split('\\n').slice(0).map(line => line.split(','))[0];\n      console.log(header);\n    }).then(data => {\n      if (isMounted) {\n        setData(data);\n      }\n    }).catch(catchError);\n    return () => isMounted = false;\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"WHAT\"));\n}","map":{"version":3,"sources":["/Users/utilizador/Documents/academia/LocalRepo/covid-app/react-Covid-App/src/components/GlobalChart.js"],"names":["React","useState","useEffect","browserHistory","catchError","console","log","GlobalChart","data","setData","fetchData","content","fetch","ok","Error","values","json","isMounted","then","rawElements","header","split","slice","map","line","catch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,cAAR,QAA6B,cAA7B;;AAGA,SAASC,UAAT,GAAqB;AACjB;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACH;;AAED,eAAe,SAASC,WAAT,GAAsB;AAEjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AAEA,iBAAeS,SAAf,GAA0B;AACtB,UAAMC,OAAO,GAAG,MAAMC,KAAK,CAAE,sCAAF,CAA3B;;AACA,QAAI,CAACD,OAAO,CAACE,EAAb,EAAgB;AACZ,YAAM,IAAIC,KAAJ,CAAU,WAAV,CAAN;AACH;;AAGD,UAAMC,MAAM,GAAGJ,OAAO,CAACK,IAAR,EAAf;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;AAKA,WAAOA,MAAP;AACH;;AAGDb,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIe,SAAS,GAAC,IAAd;AAEAP,IAAAA,SAAS,GAAGQ,IAAZ,CAAkBC,WAAD,IAAe;AAC5B,YAAMC,MAAM,GAAGZ,IAAI,CAACa,KAAL,CAAW,IAAX,EAAiBC,KAAjB,CAAuB,CAAvB,EACtBC,GADsB,CAClBC,IAAI,IAAKA,IAAI,CAACH,KAAL,CAAW,GAAX,CADS,EACS,CADT,CAAf;AAGRhB,MAAAA,OAAO,CAACC,GAAR,CAAYc,MAAZ;AACK,KALD,EAUCF,IAVD,CAUOV,IAAD,IAAS;AACX,UAAGS,SAAH,EAAa;AACTR,QAAAA,OAAO,CAACD,IAAD,CAAP;AACH;AACJ,KAdD,EAcGiB,KAdH,CAcSrB,UAdT;AAgBA,WAAO,MAAMa,SAAS,GAAG,KAAzB;AAEH,GArBQ,EAqBN,EArBM,CAAT;AAuBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,CADJ;AAQH","sourcesContent":["import React from 'react';\nimport {useState, useEffect} from 'react';\nimport {browserHistory} from 'react-router';\n\n\nfunction catchError(){\n    //browserHistory.push('/page-not-found')\n    //window.location.reload()\n    console.log(1)\n}\n\nexport default function GlobalChart(){\n    \n    const [data, setData] = useState({});\n\n    async function fetchData(){\n        const content = await fetch(`https://disease.sh/v2/historical/all`)\n        if (!content.ok){\n            throw new Error(\"Not found\")\n        }\n        \n            \n        const values = content.json()\n        console.log(values)\n\n        \n       \n\n        return values;\n    }\n    \n\n    useEffect(()=>{\n        let isMounted=true;\n\n        fetchData().then((rawElements)=>{\n            const header = data.split('\\n').slice(0)\n    .map(line => (line.split(',')))[0];\n\n    console.log(header)\n        }\n        \n        )\n        \n        \n        .then((data) =>{\n            if(isMounted){\n                setData(data)\n            }\n        }).catch(catchError);\n\n        return () => isMounted = false\n\n    }, [])\n\n    return (\n        <div>\n        <h3>\n        WHAT\n        </h3>\n        </div>\n        )\n        \n}\n\n"]},"metadata":{},"sourceType":"module"}